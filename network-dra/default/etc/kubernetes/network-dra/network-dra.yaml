---
# Source: Network-DRA/templates/network-dra-service-account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: network-dra-service-account
---
# Source: Network-DRA/templates/dra.networking_networkattachements.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: networkattachements.dra.networking
spec:
  group: dra.networking
  names:
    kind: NetworkAttachement
    listKind: NetworkAttachementList
    plural: networkattachements
    singular: networkattachement
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: NetworkAttachement is a specification for a NetworkAttachement
          resource.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: |-
              Specification of the desired behavior of the NetworkAttachement.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
            type: object
          status:
            description: |-
              Most recently observed status of the NetworkAttachement.
              Populated by the system.
              Read-only.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
            type: object
        type: object
    served: true
    storage: true
---
# Source: Network-DRA/templates/network-dra-cluster-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: network-dra-cluster-role
rules:
- apiGroups:
  - ""
  - resource.k8s.io
  - networkattachements.dra.networking
  resources: ["*"]
  verbs: ["*"]
---
# Source: Network-DRA/templates/network-dra-cluster-role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: network-dra-role-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: network-dra-cluster-role
subjects:
- kind: ServiceAccount
  name: network-dra-service-account
  namespace: default
---
# Source: Network-DRA/templates/network-dra-driver-daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: network-dra-plugin
  labels:
    app: network-dra-plugin
spec:
  selector:
    matchLabels:
      app: network-dra-plugin
  template:
    metadata:
      labels:
        app: network-dra-plugin
    spec:
      initContainers:
      - name: network-dra-plugin-init
        image: network-dra-plugin:latest
        imagePullPolicy: Always
        command:
        - mv
        args:
        - "--force"
        - "./network-dra-oci-hook"
        - "/network-dra-plugin-oci-hook/network-dra-oci-hook"
        volumeMounts:
        - name: network-dra-plugin-oci-hook
          mountPath: /network-dra-plugin-oci-hook
      containers:
      - name: network-dra-plugin
        image: network-dra-plugin:latest
        imagePullPolicy: Always
        command:
        - ./network-dra-plugin
        args:
        - "run"
        - "--driver-plugin-path=/var/lib/kubelet/plugins/"
        - "--plugin-registration-path=/var/lib/kubelet/plugins_registry/"
        - "--cdi-root=/var/run/cdi"
        - "--cri-socket-path=/host/run/containerd/containerd.sock"
        - "--multus-socket-path=/host/run/multus/multus.sock"
        - "--node-name=$(NODE_NAME)"
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        securityContext:
          privileged: true
        volumeMounts:
        - name: network-dra-plugin-oci-hook
          mountPath: /network-dra-plugin-oci-hook
        - name: plugins-registry
          mountPath: /var/lib/kubelet/plugins_registry
        - name: plugins
          mountPath: /var/lib/kubelet/plugins
        - name: cdi
          mountPath: /var/run/cdi
        - name: cri-socket
          mountPath: /host/run/containerd/containerd.sock
        - name: multus-server-socket
          mountPath: /host/run/multus/multus.sock
      volumes:
      - name: network-dra-plugin-oci-hook
        hostPath:
          path: /network-dra-plugin-oci-hook
          type: "DirectoryOrCreate"
      - name: plugins-registry
        hostPath:
          path: /var/lib/kubelet/plugins_registry
      - name: plugins
        hostPath:
          path: /var/lib/kubelet/plugins
      - name: cdi
        hostPath:
          path: /var/run/cdi
      - name: cri-socket
        hostPath:
          path: /run/containerd/containerd.sock
          type: Socket
      - name: multus-server-socket
        hostPath:
          path: /run/multus/multus.sock
          type: Socket
---
# Source: Network-DRA/templates/network-dra-controller-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: network-dra-controller
  labels:
    app: network-dra-controller
spec:
  selector:
    matchLabels:
      app: network-dra-controller
  template:
    metadata:
      labels:
        app: network-dra-controller
    spec:
      serviceAccountName: network-dra-service-account
      containers:
      - name: network-dra-controller
        image: network-dra-controller:latest
        imagePullPolicy: Always
        command:
        - ./network-dra-controller
        args:
        - run
        securityContext:
          privileged: true
---
# Source: Network-DRA/templates/resourceclass.yaml
apiVersion: resource.k8s.io/v1alpha2
kind: ResourceClass
metadata:
  name: dra.networking
driverName: dra.networking
