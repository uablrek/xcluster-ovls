#! /bin/sh
##
## haproxy_test --
##
##   Test script for haproxy executed in xcluster.
##
## Commands;
##

prg=$(basename $0)
dir=$(dirname $0); dir=$(readlink -f $dir)
me=$dir/$prg
tmp=/tmp/${prg}_$$
. /etc/profile
test -n "$__nvm" || __nvm=4

die() {
	echo "ERROR: $*" >&2
	rm -rf $tmp
	exit 1
}
help() {
	grep '^##' $0 | cut -c3-
	rm -rf $tmp
	exit 0
}
test -n "$1" || help
echo "$1" | grep -qi "^help\|-h" && help

log() {
	echo "$*" >&2
}

##   tcase_version
##     Log versions
cmd_tcase_version() {
	log_version
}
##   tcase_start_haproxy
##     Start HAProxy
cmd_tcase_start_haproxy() {
	tcase "Start HAProxy"
	local n vm cfg=/etc/haproxy/haproxy.cfg
	for n in $(seq $__nvm); do
		vm=$(printf "vm-%03d" $n)
		echo "        server $vm 192.168.1.$n:80 check" >> $cfg
	done
	haproxy -f $cfg > /var/log/haproxy.log 2>&1 &
}
##   tcase_sample [--count=20]
##     Test access through haproxy and check access an load-balancing
cmd_tcase_sample() {
	tcase "Check access an load-balancing"
	test -n "$__count" || __count=20
	local i out=/tmp/samples
	for i in $(seq 1 $__count); do
		wget -q -O- http://192.168.2.201:8080/cgi-bin/info >> $out \
			|| tdie "Access failed"
	done
	cat /tmp/samples | sort | uniq -c > $out.stats
	cat $out.stats

	local targets=$(cat $out.stats | wc -l)
	tlog "Got answer from $targets targets"
	test $targets -eq $__nvm || tdie "Expected $__nvm targets"
	return 0
}


. /usr/lib/xctest
indent='  '

##
# Get the command
cmd=$1
shift
grep -q "^cmd_$cmd()" $0 || die "Invalid command [$cmd]"

while echo "$1" | grep -q '^--'; do
	if echo $1 | grep -q =; then
		o=$(echo "$1" | cut -d= -f1 | sed -e 's,-,_,g')
		v=$(echo "$1" | cut -d= -f2-)
		eval "$o=\"$v\""
	else
		o=$(echo "$1" | sed -e 's,-,_,g')
		eval "$o=yes"
	fi
	shift
done
unset o v
long_opts=`set | grep '^__' | cut -d= -f1`

# Execute command
trap "die Interrupted" INT TERM
cmd_$cmd "$@"
status=$?
rm -rf $tmp
exit $status
