#! /bin/sh

if echo $SERVERS | grep -Eiq 'httpd|all'; then
	test -n "$HTTPD_PARAMS" || HTTPD_PARAMS="-c 'cgi-bin/*' -d /root/www -u root"
	echo "mini_httpd $HTTPD_PARAMS"
	mini_httpd $HTTPD_PARAMS &
	children="$! $children"
fi

if echo $SERVERS | grep -Eiq 'ctraffic|all'; then
	test -n "$CTRAFFIC_PARAMS" || CTRAFFIC_PARAMS="-udp -address [::]:5003"
	echo "ctraffic -server $CTRAFFIC_PARAMS"
	ctraffic -server $CTRAFFIC_PARAMS &
	children="$! $children"
fi

if echo $SERVERS | grep -Eiq 'mconnect|all'; then
	test -n "$MCONNECT_PARAMS" || MCONNECT_PARAMS="-udp -address [::]:5001"
	echo "mconnect -server $MCONNECT_PARAMS"
	mconnect -server $MCONNECT_PARAMS &
	children="$! $children"
fi

if echo $SERVERS | grep -Eiq 'kahttp|all'; then
	cert=$(dirname $(which kahttp))/cert
	mv $cert /etc
	test -n "$KAHTTP_PARAMS" || KAHTTP_PARAMS="-address :8080 -https_addr :8443"
	echo "kahttp $KAHTTP_PARAMS"
	kahttp -server -https_cert /etc/cert/server.crt \
		-https_key /etc/cert/server.key $KAHTTP_PARAMS &
	children="$! $children"
fi

test -n "$SCTP_INTERFACE" || SCTP_INTERFACE=eth0
if echo $SERVERS | grep -Eiq 'sctp|all'; then
	if which sctpt > /dev/null; then
		# Create a comma separated list of global addresses
		# Both ipv4 and ipv6
		for a in $(ip -json addr show dev $SCTP_INTERFACE | \
			jq -r '.[]|select(.addr_info)|.addr_info[]|select(.scope == "global")|.local'); do
			if test -n "$addr"; then
				addr="$addr,$a"
			else
				addr=$a
			fi
		done
		echo "sctpt server --laddr=$addr"
		sctpt server --addr=$addr &
		children="$! $children"
	else
		echo "Requested but not installed [sctpt]"
	fi
fi

if echo $SERVERS | grep -Eiq 'udpserver|all'; then
	if which tserver > /dev/null; then
		tserver udp-server --address=:::8777 &
		children="$! $children"
	fi
fi

if echo $SERVERS | grep -Eiq 'telnet|all'; then
	telnetd -l /bin/sh
	children="$! $children"
fi

echo "Child PIDs: $children"
test -z "$children" && tail -f /dev/null	

_term() {
	echo "Caught SIGTERM signal!" 
	kill -TERM $children
}
trap _term SIGTERM
wait

